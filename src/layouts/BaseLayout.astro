---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;

import MetaTags from '../components/base/MetaTags.astro';

import Header from '../components/base/Header.astro';

// Supports weights 100-900
import '@fontsource/noto-sans';
import '@fontsource/noto-mono';
import '@fontsource/noto-sans-mono';
import '@fontsource/noto-sans-display';
import '@fontsource/noto-sans-math';

import '../styles/global.scss';

import { getCanonicalURL } from '../constants.ts';

const canonicalURLString = getCanonicalURL(Astro.url.pathname);
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<MetaTags title={title} description={description}/>
		<link rel="icon" type="image/png" href="/favicon.png" />
		<link rel="canonical" href={canonicalURLString} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<link rel="alternate" type="application/rss+xml" title="Aaron Yoder" href={new URL("rss.xml", Astro.site)}/>
		<title>{title}</title>
		<slot name="structured-data"/>
		<script is:inline src='/scripts/theme-handler.js' />
		<noscript><style is:global> .js-required { display: none !important; } </style></noscript>
	</head>
	<body>
		<canvas class="gradient-bg">
		</canvas>
		<div class="site-wrapper">
			<Header/>
			<main>
				<slot />
			</main>
			<!--<Footer/>-->
		</div>

		<!-- Cloudflare Web Analytics -->
		<script defer src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "ba718c4fdf6042bea12a6cb5e599d8c0"}'></script>
		<!-- End Cloudflare Web Analytics -->
	</body>
</html>

<style lang="scss">
.under-construction {
  // TODO: Temporary
  padding-top: 1rem;
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: center;
}

.gradient-bg {
  --a: 45deg;
  --l: 0%;
  --c: var(--gradient-color-1);

  display: block;
  width: 100vw;
  height: 100vh;
  z-index: -20;
  top: 0;
  left: 0;
  position: fixed;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  background: linear-gradient(
    var(--a),
    var(--c) var(--l),
    var(--gradient-color-2) 35%,
    var(--gradient-color-3) 65%,
    var(--gradient-color-4) 100%
  );
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='500' height='500'%3E%3Cfilter id='noise' x='0' y='0'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='8' stitchTiles='stitch'/%3E%3CfeBlend mode='screen'/%3E%3C/filter%3E%3Crect width='1000' height='1000' filter='url(%23noise)' opacity='0.9'/%3E%3C/svg%3E");
  animation: bg 15s ease infinite alternate;
}

@keyframes bg {
  from {
    --a: 0deg;
    --c: var(--gradient-color-1);
  }
  50% {
    --c: var(--gradient-color-accent-variant);
  }
  to {
    --a: 145deg;
    --c: var(--gradient-color-accent);
  }
}

@property --a {
  syntax: "<angle>";
  inherits: false;
  initial-value: 45deg;
}

@property --l {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --c {
  syntax: "<color>";
  inherits: false;
  initial-value: var(--gradient-color-1);
}
</style>